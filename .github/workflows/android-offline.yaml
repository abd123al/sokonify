on:
  push:
    branches:
      - internal #What developers see
      - alpha #
      - beta #
      - production #What our users use

name: "Build and release offline app"
jobs:
  generate:
    name: Building appbundle
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: kateile/blocitory
          token: ${{ secrets.BROCITORY_ACCESS_TOKEN }}
          path: blocitory

      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Installing go server dependencies
        working-directory: server
        run: |
          go install

      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'

      - name: setup-android-tools
        uses: maxim-lobanov/setup-android-tools@v1
        with:
          packages: ndk;19.2.5345600

      - name: Decoding keystore.jks
        working-directory: client/apps/offline
        run: echo "${{ secrets.KEYSTORE_JKS }}" | base64 --decode > android/app/keystore.jks

      - name: Decoding key.properties
        working-directory: client/apps/offline
        run: echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > android/key.properties

      - name: Setting date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Calculating app version
        id: version
        env:
          NUM: ${{ github.run_number }}
        run: echo "::set-output name=version::$(($NUM+0))"

      - name: Setting tag name
        id: tag
        run: echo "::set-output name=tag::${{steps.date.outputs.date}}.${{steps.version.outputs.version}}.${{github.ref_name}}"

      - name: Building app
        shell: pwsh
        run: >
          ./client/scripts/build_offline_app_bundle.ps1 
          -build_number ${{ steps.version.outputs.version }} 
          -build_name ${{ steps.tag.outputs.tag }}
        env:
          GOPROXY: https://proxy.golang.org,direct
          GO111MODULE: "on"

      - uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.sokonify.offline
          releaseFiles: client/apps/offline/build/app/outputs/bundle/release/*.aab
          track: ${{ github.ref_name }}
          inAppUpdatePriority: 2
          whatsNewDirectory: client/whatsnew
          mappingFile: client/apps/offline/build/app/outputs/mapping/release/mapping.txt

      - name: Configure git
        run: |
          git config --global user.email "kateile@outlook.com"
          git config --global user.name "Sylvanus Kateile"
          git remote set-url origin https://sokonify:${{ secrets.GITHUB_TOKEN }}@github.com/sokonify/sokonify.git

      - name: Setting & pushing git tag
        run: |
          git tag v.${{steps.tag.outputs.tag}}
          git push origin v.${{steps.tag.outputs.tag}}
